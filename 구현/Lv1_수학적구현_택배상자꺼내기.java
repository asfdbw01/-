/*
 * 문제 요약
 * 		1부터 n번까지 번호가 매겨진 택배 상자들이 창고에 한 층당 w개씩 지그재그(왼쪽→오른쪽, 오른쪽→왼쪽) 방식으로 쌓여 있다. 특정 번호의
 * 		상자(num)를 꺼내기 위해서는 해당 상자 위에 놓인 같은 열의 상자들을 먼저 꺼내야 한다.
 * 
 * 입력: 
 * 		n: 상자의 총 개수 (2 ≤ n ≤ 100)
 * 		w: 한 층에 가로로 놓는 상자의 개수 (1 ≤ w ≤ 10)
 * 		num: 꺼내려는 상자 번호 (1 ≤ num ≤ n)
 * 출력: 
 * 		num 상자를 꺼내기 위해 위에 있는 같은 열의 상자 수 + 자기 자신 포함
 */

/*
 * 핵심 포인트
 * 		문제는 겉으로 보기엔 구현형처럼 보이지만, 실제로는 수학적 패턴 분석 문제이다.
 * 		층, 열 계산을 정확히 수식화하면 시뮬레이션 없이도 O(1) 시간에 해결 가능하며,
 * 		배열로 시뮬레이션 하지 않아 메모리 절약이 된다.
 * 		(w - (num % w)) % w * 2 + 1 부분은 지그재그 구조에서 열 위치를 보정하는 핵심 수식이다.
 */

// 스스로에게 주는 제약조건
// 		1. 반복문 없이 수식으로 구현
// 		2. 괄호는 연산 우선순위를 명시적으로 표현
class Solution {
    public int solution(int n, int w, int num) {
    	// 1. w의 2배 주기로 num 박스 위에 w의 짝수배만큼 더해진 번호의 상자가 반드시 있음
        int layer = ((n - num) / (w * 2)) * 2;
        
        // 2. 지그재그 구조 고려하여 열 위치에 상자가 존재하는지 확인
        int offset = (w - (num % w)) % w * 2 + 1;
        layer += (n - (w * layer) >= num + offset) ? 1 : 0;
        
        // 3. 자기 층도 포함하기 위해 +1
        layer++;
        
        return layer;
    }
}
