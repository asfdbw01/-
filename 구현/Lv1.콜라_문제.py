# """
# 문제 설명:
# 오래전 유행했던 콜라 문제의 일반화 버전입니다.

# 콜라 빈 병 a개를 가져다주면 콜라 b병을 주는 마트가 있습니다.
# 빈 병 n개를 가지고 있을 때, 상빈이는 총 몇 병의 콜라를 받을 수 있을까요?

# 조건:
# - 콜라를 받기 위해서는 반드시 빈 병이 a개 이상 있어야 합니다.
# - 콜라를 받은 뒤에는 받은 콜라를 마셔서 빈 병이 생깁니다.
# - 이 과정을 반복할 수 있으며, 빈 병이 a개 미만이 되면 콜라를 더 이상 받을 수 없습니다.

# 예시:
# a = 2, b = 1, n = 20 인 경우,
# 상빈이는 19병의 콜라를 받을 수 있습니다.
# (과정: 20 → 10 → 5 → 2 → 1 → 마지막 1 = 총 19병)

# 입력 매개변수:
# - a (int): 콜라를 받기 위해 필요한 빈 병 수 (2 ≤ a < n ≤ 1,000,000)
# - b (int): a개의 빈 병을 주었을 때 받는 콜라 병 수 (1 ≤ b < a)
# - n (int): 처음 가지고 있는 빈 병의 수

# 출력:
# - int형으로 상빈이가 받을 수 있는 총 콜라 병 수를 반환

def solution(a, b, n):
    total = 0
    while n >= a:
        exchange = (n // a) * b
        total += exchange
        n = (n % a) + exchange
    return total
